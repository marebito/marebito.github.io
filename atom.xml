<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>博伊卡の楼閣</title>
  
  <subtitle>逆水行舟，不进则退</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://zhaolilong.com/"/>
  <updated>2020-09-16T02:22:38.648Z</updated>
  <id>https://zhaolilong.com/</id>
  
  <author>
    <name>Boyka·Yuri</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Mac下启动ssh服务</title>
    <link href="https://zhaolilong.com/2020/09/16/Mac%E4%B8%8B%E5%90%AF%E5%8A%A8ssh%E6%9C%8D%E5%8A%A1/"/>
    <id>https://zhaolilong.com/2020/09/16/Mac下启动ssh服务/</id>
    <published>2020-09-16T02:22:03.000Z</published>
    <updated>2020-09-16T02:22:38.648Z</updated>
    
    <content type="html"><![CDATA[<p>mac本身安装了ssh服务，默认情况下不会开机自启</p><p>1、启动sshd服务：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo launchctl load -w /System/Library/LaunchDaemons/ssh.plist</span><br></pre></td></tr></table></figure><p>2、停止sshd服务：</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo launchctl unload -w /System/Library/LaunchDaemons/ssh.plist</span><br></pre></td></tr></table></figure><p>3、查看是否启动：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo launchctl <span class="built_in">list</span> | grep ssh</span><br></pre></td></tr></table></figure><p>如果看到下面的输出表示成功启动了：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">-</span> 0  <span class="selector-tag">com</span><span class="selector-class">.openssh</span><span class="selector-class">.sshd</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mac本身安装了ssh服务，默认情况下不会开机自启&lt;/p&gt;
&lt;p&gt;1、启动sshd服务：&lt;/p&gt;
&lt;figure class=&quot;highlight ruby&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOS7下利用init.d启动脚本实现tomcat开机自启动</title>
    <link href="https://zhaolilong.com/2020/09/16/CentOS7%E4%B8%8B%E5%88%A9%E7%94%A8init-d%E5%90%AF%E5%8A%A8%E8%84%9A%E6%9C%AC%E5%AE%9E%E7%8E%B0tomcat%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF%E5%8A%A8/"/>
    <id>https://zhaolilong.com/2020/09/16/CentOS7下利用init-d启动脚本实现tomcat开机自启动/</id>
    <published>2020-09-16T02:06:01.000Z</published>
    <updated>2020-09-16T02:07:26.454Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1. 环境准备"></a>1. 环境准备</h1><h2 id="1-1-系统"><a href="#1-1-系统" class="headerlink" title="1.1 系统"></a>1.1 系统</h2><p>操作系统：CentOS 7（64位）</p><h2 id="1-2-工具-软件"><a href="#1-2-工具-软件" class="headerlink" title="1.2 工具/软件"></a>1.2 工具/软件</h2><p>已安装JDK，并配置好环境变量<br>已安装tamcat，可手动启动</p><h1 id="2-方法-步骤"><a href="#2-方法-步骤" class="headerlink" title="2. 方法/步骤"></a>2. 方法/步骤</h1><h2 id="2-1-JDK环境配置"><a href="#2-1-JDK环境配置" class="headerlink" title="2.1 JDK环境配置"></a>2.1 JDK环境配置</h2><p>CentOS7默认安装了OpenJDK，用于支持Tomcat启动是没有问题的。如果项目需要使用Sun的JDK特性的话，就需要重新配置Sun的JDK环境。这里可以参照本人之前的博文：《17101501_CentOS7下卸载openJDK安装Sun公司的JDK》。</p><h2 id="2-2编写tomcat服务脚本文件"><a href="#2-2编写tomcat服务脚本文件" class="headerlink" title="2.2编写tomcat服务脚本文件"></a>2.2编写tomcat服务脚本文件</h2><p>在/etc/init.d/目录下创建tomcat8服务脚本文件。<br>执行脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# vim /etc/init.d/tomcat8</span><br><span class="line">[root@localhost /]# cat /etc/init.d/tomcat8</span><br></pre></td></tr></table></figure><p>将下面内容进行粘贴：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/bash</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> tomcat startup script <span class="keyword">for</span> the Tomcat server</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig: 345 80 20</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> description: start the tomcat deamon</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Source <span class="keyword">function</span> library</span></span><br><span class="line">. /etc/rc.d/init.d/functions</span><br><span class="line"></span><br><span class="line">prog=tomcat8</span><br><span class="line">JAVA_HOME=/usr/java/jdk1.8.0_151/  # 根据自己的路径改写JAVA_HOME</span><br><span class="line">export JAVA_HOME</span><br><span class="line">CATALANA_HOME=/usr/local/tomcat/   # 根据自己的路径改写CATALANA_HOME</span><br><span class="line">export CATALINA_HOME</span><br><span class="line"></span><br><span class="line">case "$1" in</span><br><span class="line">start)</span><br><span class="line">    echo "Starting Tomcat..."</span><br><span class="line">    $CATALANA_HOME/bin/startup.sh</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">stop)</span><br><span class="line">    echo "Stopping Tomcat..."</span><br><span class="line">    $CATALANA_HOME/bin/shutdown.sh</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">restart)</span><br><span class="line">    echo "Stopping Tomcat..."</span><br><span class="line">    $CATALANA_HOME/bin/shutdown.sh</span><br><span class="line">    sleep 2</span><br><span class="line">    echo</span><br><span class="line">    echo "Starting Tomcat..."</span><br><span class="line">    $CATALANA_HOME/bin/startup.sh</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">*)</span><br><span class="line">    echo "Usage: $prog &#123;start|stop|restart&#125;"</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br><span class="line">exit 0</span><br></pre></td></tr></table></figure><p>保存退出</p><h2 id="2-3-赋权限，测试启动脚本"><a href="#2-3-赋权限，测试启动脚本" class="headerlink" title="2.3 赋权限，测试启动脚本"></a>2.3 赋权限，测试启动脚本</h2><p>执行脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost /]# cd /etc/init.d/</span><br><span class="line">[root@localhost init.d]# chmod 755 tomcat8    #赋予权限</span><br><span class="line">[root@localhost init.d]# service tomcat8 start  #启动服务</span><br><span class="line">Starting tomcat8 (via systemctl):                          [  确定  ]</span><br><span class="line">[root@localhost init.d]# service tomcat8 stop   #停止服务</span><br><span class="line">Stopping tomcat8 (via systemctl):                          [  确定  ]</span><br><span class="line">[root@localhost init.d]# service tomcat8 restart  #重启服务</span><br><span class="line">Restarting tomcat8 (via systemctl):                        [  确定  ]</span><br></pre></td></tr></table></figure><h2 id="2-4-将服务脚本加入到系统启动队列"><a href="#2-4-将服务脚本加入到系统启动队列" class="headerlink" title="2.4 将服务脚本加入到系统启动队列"></a>2.4 将服务脚本加入到系统启动队列</h2><p>执行脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost zm]# chkconfig tomcat8 on  #服务脚本加入到系统启动队列</span><br><span class="line">[root@localhost zm]# chkconfig --list  tomcat8  #检查 oracle服务是否已经生效</span><br><span class="line">注意：该输出结果只显示 SysV 服务，并不包含原生 systemd 服务。SysV 配置数据可能被原生 systemd 配置覆盖。</span><br><span class="line">      如果您想列出 systemd 服务,请执行 &apos;systemctl list-unit-files&apos;。</span><br><span class="line">      欲查看对特定 target 启用的服务请执行</span><br><span class="line">      &apos;systemctl list-dependencies [target]&apos;。</span><br><span class="line">tomcat8         0:关    1:关    2:开    3:开    4:开    5:开    6:关</span><br></pre></td></tr></table></figure><h2 id="2-5-重启系统，测试配置结果"><a href="#2-5-重启系统，测试配置结果" class="headerlink" title="2.5 重启系统，测试配置结果"></a>2.5 重启系统，测试配置结果</h2><p>一般情况下，启动是没有问题的。</p><p>这里多说点儿，因为CentOS7的自启动服务开始由systemctl逐渐替代了早期版本中的chkconfig和service形式。<br>这里我尝试了一下用指令：systemctl start tomcat8启动服务，系统提示systemctl daemon-reload命令加载服务，执行后，发现可以通过systemctl命令进行简单的控制，如查询状态，启动服务，终止服务，重启服务等操作。但是关于开机启动的设置是不可以的，还需要通过老命令chkconfig实现。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-环境准备&quot;&gt;&lt;a href=&quot;#1-环境准备&quot; class=&quot;headerlink&quot; title=&quot;1. 环境准备&quot;&gt;&lt;/a&gt;1. 环境准备&lt;/h1&gt;&lt;h2 id=&quot;1-1-系统&quot;&gt;&lt;a href=&quot;#1-1-系统&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>服务器下配置springboot项目开机自启</title>
    <link href="https://zhaolilong.com/2020/09/16/%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B8%8B%E9%85%8D%E7%BD%AEspringboot%E9%A1%B9%E7%9B%AE%E5%BC%80%E6%9C%BA%E8%87%AA%E5%90%AF/"/>
    <id>https://zhaolilong.com/2020/09/16/服务器下配置springboot项目开机自启/</id>
    <published>2020-09-16T02:01:49.000Z</published>
    <updated>2020-09-16T02:04:36.136Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>Linux版本 Centos7详细步骤如下：</p></blockquote><h4 id="1-在-etc-init-d-目录下创建shell启动脚本autojar-sh"><a href="#1-在-etc-init-d-目录下创建shell启动脚本autojar-sh" class="headerlink" title="1.在/etc/init.d/目录下创建shell启动脚本autojar.sh"></a>1.在/etc/init.d/目录下创建shell启动脚本autojar.sh</h4><ol><li><p>cd /etc/init.d/</p></li><li><p>touch autojar.sh</p></li><li><p>vi autojar.sh</p><p>内容如下：</p></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash">!/bin/sh</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> chkconfig: 2345 85 15</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> description:auto_run</span></span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash">程序名</span></span><br><span class="line">RUN_NAME="SpringBoot.jar"</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash">jar包位置</span></span><br><span class="line">JAVA_OPTS=/software/SpringBoot.jar</span><br><span class="line"><span class="meta">#</span><span class="bash">后台运行日志位置</span></span><br><span class="line">LOG_OPTS=/software/nohup.out</span><br><span class="line">​</span><br><span class="line"><span class="meta">#</span><span class="bash">开始方法</span></span><br><span class="line">start() &#123;</span><br><span class="line">        nohup java -jar $JAVA_OPTS &gt;$LOG_OPTS 2&gt;&amp;1 &amp;</span><br><span class="line">        echo "$RUN_NAME started success."</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash">结束方法</span></span><br><span class="line">stop() &#123;</span><br><span class="line">        echo "stopping $RUN_NAME ..."</span><br><span class="line">        kill -9 `ps -ef|grep $JAVA_OPTS|grep -v grep|grep -v stop|awk '&#123;print $2&#125;'`</span><br><span class="line">&#125;</span><br><span class="line">  </span><br><span class="line">case "$1" in</span><br><span class="line">        start)</span><br><span class="line">            start</span><br><span class="line">            ;;</span><br><span class="line">        stop)</span><br><span class="line">            stop</span><br><span class="line">            ;;</span><br><span class="line">        restart)</span><br><span class="line">            stop</span><br><span class="line">            start</span><br><span class="line">            ;;</span><br><span class="line">        *)</span><br><span class="line">                echo "Userage: $0 &#123;start|stop|restart&#125;"</span><br><span class="line">                exit 1</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>第一行，告诉系统使用的shell,所以的shell脚本都是这样。</p><p>第二行，2345代表在设置在那个level中是on的，如果一个都不想on，那就写一个横线”-“，85和15， 后面两个数字代表S和K的默认排序号 ，告诉chkconfig程序，需要在rc2.d~rc5.d目录下，创建名字为S80autojar的文件连接， 第一个字符是S，系统在启动的时候，运行脚本autojar</p><p>注意上面的三行中，第二，第三行是必须的，否则在运行chkconfig –add auto_run时，会报错。</p><p>85 数字越小 启动优先级别越高</p><p>15数字越小 关闭优先级别越高</p><h4 id="2-设置执行权限"><a href="#2-设置执行权限" class="headerlink" title="2.设置执行权限"></a>2.设置执行权限</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/init.d/autojar.sh</span><br><span class="line">chmod +x /software/SpringBoot.jar</span><br></pre></td></tr></table></figure><h4 id="3-添加到chkconfig作为系统服务，并设置开机启动："><a href="#3-添加到chkconfig作为系统服务，并设置开机启动：" class="headerlink" title="3.添加到chkconfig作为系统服务，并设置开机启动："></a>3.添加到chkconfig作为系统服务，并设置开机启动：</h4><p>系统在启动的时候，就会运行autojar并加上start参数，等同于执行命令autojar start。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">chkconfig --add autojar.sh   (添加为系统服务)</span><br><span class="line">chkconfig autojar.sh on  （开机自启动）</span><br><span class="line">service autojar.sh start（启动服务）</span><br></pre></td></tr></table></figure><h4 id="4-重启"><a href="#4-重启" class="headerlink" title="4.重启"></a>4.重启</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reboot</span><br></pre></td></tr></table></figure><h4 id="5-查看"><a href="#5-查看" class="headerlink" title="5.查看"></a>5.查看</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">netstat -ntlp | grep 8082 （查看端口）</span><br><span class="line">ps aux|grep java（查看服务）</span><br></pre></td></tr></table></figure><h4 id="说明"><a href="#说明" class="headerlink" title="说明:"></a>说明:</h4><p>chkconfig提供一种简单的命令行工具来帮助管理员对/etc/rc[0-6].d目录层次下的众多的符号链接进行直接操作。 此命令使用是由chkconfig命令在IRIX操作系统提供授权。不用在/etc/rc[0-6].d目录下直接维护配置信息，而是直接在/etc/rc[0-6]下管理链接文件。在运行级别的目录下的配置信息通知在将会初始启动哪些服务。</p><p><strong>Chkconfig有五个很明确的功能</strong>：为管理增加一个新的功能、删除一个功能、列出当前服务的启动信息、改变一个服务的启动信息和检测特殊服务的启动状态。</p><p>当chkconfig没有参数运行时，它将显示其使用方法。如果只给出了一个服务名，它将检测这个服务名是否已经被配置到了当前运行级别中。如果已经配置，返回真，否则返回假。–level选项可以被用做查询多个运行级别而不仅仅是一个。</p><p>如果在服务名之后指定了on,、off或reset，chkconfig将改变指定服务的启动信息。On或off标记服务被打开或停止，尤其是在运行级别被改变时。Reset标记重置服务的启动信息。</p><p>默认情况下，on或off选项仅对2、3、4、5有影响，而 reset影响所有的运行级。–level选项可以被用于指定哪个运行级别接收影响。</p><p>注意：对于每个服务，每一个运行级都有一个开始角本和一个结束角本。当开或关一个运行级时，init不会重新开始一个已经运行的服务，也不会重新停止一个未运行的服务。</p><p>选项：</p><p><strong>–level levels</strong> 指定一个运行级别适合的操作。范围为0-7。</p><p><strong>–add name</strong> 增加一个新的服务。</p><p><strong>–del name</strong> 删除一个服务</p><p><strong>–list name</strong> 显示服务的情况</p><p><strong>RUNLEVEL FILES</strong></p><p>每个通过chkconfig管理的服务在其init.d目录下的角本中都需要两行或多行的注释。</p><p>第一行告诉chkconfig在默认情况下什么运行级别的服务可以开始，也就是所说的开始或结束的优先级别。如果服务没有默认的级别，建造将在所有运行级别中启动。a – 将用于代替运行级列表。第二个注释行包括对此服务的描述，可以通过反斜线符号扩展为多行。</p><p>示例，</p><p>auto_run的前三行如下：</p><p>#!/bin/sh</p><p>#chkconfig: 2345 80 90</p><p>#description:auto_run</p><p>第一行，告诉系统使用的shell,所以的shell脚本都是这样。</p><p>第二行，chkconfig后面有三个参数2345,80和90告诉chkconfig程序，需要在rc2.d~rc5.d目录下，创建名字为 S80auto_run的文件连接，连接到/etc/rc.d/init.d目录下的的auto_run脚本。第一个字符是S，系统在启动的时候，运行脚本auto_run，就会添加一个start参数，告诉脚本，现在是启动模式。同时在rc0.d和rc6.d目录下，创建名字为K90auto_run的文件连接，第一个字符为K，系统在关闭系统的时候，会运行auto_run，添加一个stop，告诉脚本，现在是关闭模式。 注意上面的三行中，第二，第三行是必须的，否则在运行chkconfig –add auto_run时，会报错。</p><blockquote><p> 常见的错误 “服务不支持 chkconfig”： 请注意检查脚本的前面，是否有完整的两行：</p></blockquote><p>#chkconfig: 2345 80 90</p><p>#description:auto_run</p><p>在脚本前面这两行是不能少的，否则不能chkconfig命令会报错误。 如果运行chkconfig老是报错，如果脚本没有问题，我建议，直接在rc0.d~rc6.d下面创建到脚本的文件连接来解决，原理都是一样的。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;Linux版本 Centos7详细步骤如下：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;1-在-etc-init-d-目录下创建shell启动脚本autojar-sh&quot;&gt;&lt;a href=&quot;#1-在-etc-init-d-目录下创建shel
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ssh重启报错或者无法重启</title>
    <link href="https://zhaolilong.com/2020/09/16/ssh%E9%87%8D%E5%90%AF%E6%8A%A5%E9%94%99%E6%88%96%E8%80%85%E6%97%A0%E6%B3%95%E9%87%8D%E5%90%AF/"/>
    <id>https://zhaolilong.com/2020/09/16/ssh重启报错或者无法重启/</id>
    <published>2020-09-16T01:48:08.000Z</published>
    <updated>2020-09-16T01:48:48.521Z</updated>
    
    <content type="html"><![CDATA[<blockquote><h1 id="ssh重启报错或者无法重启-Failed-to-restart-ssh-service-Unit-not-found"><a href="#ssh重启报错或者无法重启-Failed-to-restart-ssh-service-Unit-not-found" class="headerlink" title="ssh重启报错或者无法重启-Failed to restart ssh.service: Unit not found"></a>ssh重启报错或者无法重启-Failed to restart ssh.service: Unit not found</h1></blockquote><p>1.在修改了sshd_config文件之后需要重启sshd，准备执行一下命令进行重启：</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/<span class="keyword">init</span>.d/ssh restart</span><br></pre></td></tr></table></figure><p>2.发现这个路劲底下根本没有ssh，尝试以下命令：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># sudo service ssh restart</span></span><br><span class="line">Redirecting to /bin/systemctl restart ssh.service</span><br><span class="line">Failed to restart ssh.service: Unit not found.</span><br></pre></td></tr></table></figure><p>出现以下错误</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">Failed</span> <span class="selector-tag">to</span> <span class="selector-tag">restart</span> <span class="selector-tag">ssh</span><span class="selector-class">.service</span>: <span class="selector-tag">Unit</span> <span class="selector-tag">not</span> <span class="selector-tag">found</span>.</span><br></pre></td></tr></table></figure><p>3.原因：以上命令都是centos6里面的命令，在centos7需要用：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart sshd</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;h1 id=&quot;ssh重启报错或者无法重启-Failed-to-restart-ssh-service-Unit-not-found&quot;&gt;&lt;a href=&quot;#ssh重启报错或者无法重启-Failed-to-restart-ssh-service-Unit-
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>brew切换国内的源</title>
    <link href="https://zhaolilong.com/2020/09/16/brew%E5%88%87%E6%8D%A2%E5%9B%BD%E5%86%85%E7%9A%84%E6%BA%90/"/>
    <id>https://zhaolilong.com/2020/09/16/brew切换国内的源/</id>
    <published>2020-09-16T01:46:23.000Z</published>
    <updated>2020-09-16T01:47:07.916Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>切换到国内的源</p><h1 id="替换brew-git"><a href="#替换brew-git" class="headerlink" title="替换brew.git:"></a>替换brew.git:</h1><p> cd “$(brew –repo)”</p><h1 id="中国科大"><a href="#中国科大" class="headerlink" title="中国科大:"></a>中国科大:</h1><p> git remote set-url origin <a href="https://mirrors.ustc.edu.cn/brew.git" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/brew.git</a></p><h1 id="清华大学"><a href="#清华大学" class="headerlink" title="清华大学:"></a>清华大学:</h1><p> git remote set-url origin <a href="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/brew.git</a></p><h1 id="替换homebrew-core-git"><a href="#替换homebrew-core-git" class="headerlink" title="替换homebrew-core.git:"></a>替换homebrew-core.git:</h1><p> cd “$(brew –repo)/Library/Taps/homebrew/homebrew-core”</p><h1 id="中国科大-1"><a href="#中国科大-1" class="headerlink" title="中国科大:"></a>中国科大:</h1><p> git remote set-url origin <a href="https://mirrors.ustc.edu.cn/homebrew-core.git" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/homebrew-core.git</a></p><h1 id="清华大学-1"><a href="#清华大学-1" class="headerlink" title="清华大学:"></a>清华大学:</h1><p> git remote set-url origin <a href="https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/git/homebrew/homebrew-core.git</a></p><h1 id="替换homebrew-bottles"><a href="#替换homebrew-bottles" class="headerlink" title="替换homebrew-bottles:"></a>替换homebrew-bottles:</h1><h1 id="中国科大-2"><a href="#中国科大-2" class="headerlink" title="中国科大:"></a>中国科大:</h1><p> echo ‘export HOMEBREW_BOTTLE_DOMAIN=<a href="https://mirrors.ustc.edu.cn/homebrew-bottles&#39;" target="_blank" rel="noopener">https://mirrors.ustc.edu.cn/homebrew-bottles&#39;</a> &gt;&gt; ~/.bash_profile<br> source ~/.bash_profile</p><h1 id="清华大学-2"><a href="#清华大学-2" class="headerlink" title="清华大学:"></a>清华大学:</h1><p> echo ‘export HOMEBREW_BOTTLE_DOMAIN=<a href="https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&#39;" target="_blank" rel="noopener">https://mirrors.tuna.tsinghua.edu.cn/homebrew-bottles&#39;</a> &gt;&gt; ~/.bash_profile<br> source ~/.bash_profile</p><h1 id="应用生效"><a href="#应用生效" class="headerlink" title="应用生效:"></a>应用生效:</h1><p> brew update</p></blockquote><p>切换到官方源</p><h1 id="重置brew-git"><a href="#重置brew-git" class="headerlink" title="重置brew.git:"></a>重置brew.git:</h1><p> cd “$(brew –repo)”<br> git remote set-url origin <a href="https://github.com/Homebrew/brew.git" target="_blank" rel="noopener">https://github.com/Homebrew/brew.git</a></p><h1 id="重置homebrew-core-git"><a href="#重置homebrew-core-git" class="headerlink" title="重置homebrew-core.git:"></a>重置homebrew-core.git:</h1><p> cd “$(brew –repo)/Library/Taps/homebrew/homebrew-core”<br> git remote set-url origin <a href="https://github.com/Homebrew/homebrew-core.git" target="_blank" rel="noopener">https://github.com/Homebrew/homebrew-core.git</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;切换到国内的源&lt;/p&gt;
&lt;h1 id=&quot;替换brew-git&quot;&gt;&lt;a href=&quot;#替换brew-git&quot; class=&quot;headerlink&quot; title=&quot;替换brew.git:&quot;&gt;&lt;/a&gt;替换brew.git:&lt;/h1&gt;&lt;p&gt; cd “$(b
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>CentOS开机自动启动Redis</title>
    <link href="https://zhaolilong.com/2020/09/14/CentOS%E5%BC%80%E6%9C%BA%E8%87%AA%E5%8A%A8%E5%90%AF%E5%8A%A8Redis/"/>
    <id>https://zhaolilong.com/2020/09/14/CentOS开机自动启动Redis/</id>
    <published>2020-09-14T06:44:34.000Z</published>
    <updated>2020-09-14T06:51:00.152Z</updated>
    
    <content type="html"><![CDATA[<p>修改redis.conf，打开后台运行选项：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># By default Redis does not run as a daemon. Use &apos;yes&apos; if you need it.</span><br><span class="line"># Note that Redis will write a pid file in /var/run/redis.pid when daemonized.</span><br><span class="line">daemonize yes</span><br></pre></td></tr></table></figure><p>编写脚本，vim /etc/init.d/redis:</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">##!/bin/bash</span><br><span class="line"></span><br><span class="line"># chkconfig: 2345 10 90</span><br><span class="line"># description: Start and Stop redis</span><br><span class="line"> </span><br><span class="line">PATH=/usr/local/bin:/sbin:/usr/bin:/bin</span><br><span class="line"> </span><br><span class="line">REDISPORT=6379 #实际环境而定</span><br><span class="line">REDISPSWD=redis #实际环境而定</span><br><span class="line">EXEC=/usr/local/redis/src/redis-server #实际环境而定</span><br><span class="line">REDIS_CLI=/usr/local/redis/src/redis-cli #实际环境而定</span><br><span class="line"> </span><br><span class="line">PIDFILE=/var/run/redis.pid</span><br><span class="line">CONF=&quot;/usr/local/redis/redis.conf&quot; #实际环境而定</span><br><span class="line"> </span><br><span class="line">case &quot;$1&quot; in</span><br><span class="line">        start)</span><br><span class="line">                if [ -f $PIDFILE ]</span><br><span class="line">                then</span><br><span class="line">                        echo &quot;$PIDFILE exists, process is already running or crashed.&quot;</span><br><span class="line">                else</span><br><span class="line">                        echo &quot;Starting Redis server...&quot;</span><br><span class="line">                        $EXEC $CONF</span><br><span class="line">                fi</span><br><span class="line">                if [ &quot;$?&quot;=&quot;0&quot; ]</span><br><span class="line">                then</span><br><span class="line">                        echo &quot;Redis is running...&quot;</span><br><span class="line">                fi</span><br><span class="line">                ;;</span><br><span class="line">        stop)</span><br><span class="line">                if [ ! -f $PIDFILE ]</span><br><span class="line">                then</span><br><span class="line">                        echo &quot;$PIDFILE exists, process is not running.&quot;</span><br><span class="line">                else</span><br><span class="line">                        PID=$(cat $PIDFILE)</span><br><span class="line">                        echo &quot;Stopping...&quot;</span><br><span class="line">                        $REDIS_CLI -a $REDISPSWD -p $REDISPORT SHUTDOWN 2&gt;/dev/null</span><br><span class="line">                        while [ -x $PIDFILE ]</span><br><span class="line">                        do</span><br><span class="line">                                echo &quot;Waiting for Redis to shutdown...&quot;</span><br><span class="line">                                sleep 1</span><br><span class="line">                        done</span><br><span class="line">                        echo &quot;Redis stopped&quot;</span><br><span class="line">                fi</span><br><span class="line">                ;;</span><br><span class="line">        restart|force-reload)</span><br><span class="line">                $&#123;0&#125; stop</span><br><span class="line">                $&#123;0&#125; start</span><br><span class="line">                ;;</span><br><span class="line">        *)</span><br><span class="line">                echo &quot;Usage: /etc/init.d/redis &#123;start|stop|restart|force-reload&#125;&quot; &gt;&amp;2</span><br><span class="line">                exit 1</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><p>设置执行权限</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /etc/init.d/redis</span><br></pre></td></tr></table></figure><p>开机自动启动设置：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 尝试启动或停止redis</span><br><span class="line">service redis start</span><br><span class="line">service redis stop</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># 开启服务自启动</span><br><span class="line">chkconfig redis on</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;修改redis.conf，打开后台运行选项：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>linux查看redis安装目录_查看redis端口占用</title>
    <link href="https://zhaolilong.com/2020/09/14/linux%E6%9F%A5%E7%9C%8Bredis%E5%AE%89%E8%A3%85%E7%9B%AE%E5%BD%95-%E6%9F%A5%E7%9C%8Bredis%E7%AB%AF%E5%8F%A3%E5%8D%A0%E7%94%A8/"/>
    <id>https://zhaolilong.com/2020/09/14/linux查看redis安装目录-查看redis端口占用/</id>
    <published>2020-09-14T03:31:18.000Z</published>
    <updated>2020-09-14T03:33:28.375Z</updated>
    
    <content type="html"><![CDATA[<p>如果命令 which 和whereis 都找不到安装目录，可使用以下办法</p><p>  ps -ef|grep redis</p><p>得到了进程号 xxxx</p><p> 然后 ls -l /proc/xxxx/cwd</p><p>![image-20200914113316172](/Users/boyka/Library/Application Support/typora-user-images/image-20200914113316172.png)</p><p>查看端口占用</p><p>netstat -tunpl|grep 6379</p><p>如果：-bash: netstat: command not found</p><p>yum install net-tools</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;如果命令 which 和whereis 都找不到安装目录，可使用以下办法&lt;/p&gt;
&lt;p&gt;  ps -ef|grep redis&lt;/p&gt;
&lt;p&gt;得到了进程号 xxxx&lt;/p&gt;
&lt;p&gt; 然后 ls -l /proc/xxxx/cwd&lt;/p&gt;
&lt;p&gt;![image-2020091
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker安装redis</title>
    <link href="https://zhaolilong.com/2020/09/14/docker%E5%AE%89%E8%A3%85redis/"/>
    <id>https://zhaolilong.com/2020/09/14/docker安装redis/</id>
    <published>2020-09-14T03:28:48.000Z</published>
    <updated>2020-09-14T03:29:35.699Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.cnblogs.com/liyiran/p/11522114.html" target="_blank" rel="noopener">https://www.cnblogs.com/liyiran/p/11522114.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://www.cnblogs.com/liyiran/p/11522114.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.cnblogs.com/liyiran/p/11522114.html&lt;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker部署mysql：无法登陆</title>
    <link href="https://zhaolilong.com/2020/09/14/docker%E9%83%A8%E7%BD%B2mysql%EF%BC%9A%E6%97%A0%E6%B3%95%E7%99%BB%E9%99%86/"/>
    <id>https://zhaolilong.com/2020/09/14/docker部署mysql：无法登陆/</id>
    <published>2020-09-14T03:22:18.000Z</published>
    <updated>2020-09-14T03:22:54.431Z</updated>
    
    <content type="html"><![CDATA[<p>docker 部署了mysql ：无法登陆问题</p><ol><li>sudo docker run -p 3306:3306 –name mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6</li><li>.sudo docker exec -it mysql bash</li><li>mysql -uroot -p123456</li><li><img src="https://www.pianshen.com/images/875/1157d024a60a748fbc86a1f61c317b03.png" alt="登陆成功图"></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;docker 部署了mysql ：无法登陆问题&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;sudo docker run -p 3306:3306 –name mysql -e MYSQL_ROOT_PASSWORD=123456 -d mysql:5.6&lt;/li&gt;
&lt;li&gt;.sudo d
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Docker删除镜像和容器</title>
    <link href="https://zhaolilong.com/2020/09/11/Docker%E5%88%A0%E9%99%A4%E9%95%9C%E5%83%8F%E5%92%8C%E5%AE%B9%E5%99%A8/"/>
    <id>https://zhaolilong.com/2020/09/11/Docker删除镜像和容器/</id>
    <published>2020-09-11T08:12:31.000Z</published>
    <updated>2020-09-11T08:13:24.093Z</updated>
    
    <content type="html"><![CDATA[<p>当一个host中镜像和容器较多，需要重置时可选择删除其中部分或全部的镜像和容器。那么你就需要下面的操作了。</p><p>1、删除容器</p><p>1）首先需要停止所有的容器</p><p>docker stop $(docker ps -a -q)</p><p>2）删除所有的容器（只删除单个时把后面的变量改为image id即可）</p><p>docker rm $(docker ps -a -q)</p><p>2、删除镜像</p><p>1）查看host中的镜像</p><p>docker images</p><p>2）删除指定id的镜像</p><p>docker rmi <image id=""></image></p><p>想要删除untagged images，也就是那些id为的image的话可以用</p><p>docker rmi $(docker images | grep “^” | awk “{print $3}”)</p><p>3）删除全部的images</p><p>docker rmi $(docker images -q)</p><p>3、当要删除的iamges和其他的镜像有关联而无法删除时</p><p>可通过 -f 参数强制删除</p><p>docker rmi -f $(docker images -q)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;当一个host中镜像和容器较多，需要重置时可选择删除其中部分或全部的镜像和容器。那么你就需要下面的操作了。&lt;/p&gt;
&lt;p&gt;1、删除容器&lt;/p&gt;
&lt;p&gt;1）首先需要停止所有的容器&lt;/p&gt;
&lt;p&gt;docker stop $(docker ps -a -q)&lt;/p&gt;
&lt;p&gt;2）删
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>docker安装MySQL5.7</title>
    <link href="https://zhaolilong.com/2020/09/11/docker%E5%AE%89%E8%A3%85MySQL5-7/"/>
    <id>https://zhaolilong.com/2020/09/11/docker安装MySQL5-7/</id>
    <published>2020-09-11T08:05:53.000Z</published>
    <updated>2020-09-16T02:12:50.626Z</updated>
    
    <content type="html"><![CDATA[<ol><li>安装mysql5.7 docker镜像</li></ol><p>拉取官方mysql5.7镜像 </p><p><code>docker pull mysql:5.7</code></p><p><img src="https://img-blog.csdnimg.cn/2019061713323556.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3dlaXhpbl80MDQ2MTI4MQ==,size_16,color_FFFFFF,t_70" alt="img"></p><p>查看镜像库</p><p><code>docker images</code></p><p><img src="https://img-blog.csdnimg.cn/20190617133338751.png" alt="img"></p><ol start="2"><li>创建MySQL容器</li></ol><p>在本地创建mysql的映射目录</p><p><code>mkdir -p /root/mysql/data /root/mysql/logs /root/mysql/conf</code></p><p>在/root/mysql/conf中创建 *.cnf 文件(叫什么都行)</p><p><code>touch my.cnf</code></p><p>创建容器,将数据,日志,配置文件映射到本机</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -p 3306:3306 --name mysql -v /root/mysql/conf:/etc/mysql/conf.d -v /root/mysql/logs:/logs -v /root/mysql/data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=root -d mysql:5.7</span><br></pre></td></tr></table></figure><p><strong>-d:</strong> 后台运行容器</p><p><strong>-p</strong> 将容器的端口映射到本机的端口</p><p><strong>-v</strong> 将主机目录挂载到容器的目录</p><p><strong>-e</strong> 设置参数</p><p><img src="https://img-blog.csdnimg.cn/20190617135000551.png" alt="img"></p><p>启动mysql容器</p><p><code>docker start mysql</code></p><p><img src="https://img-blog.csdnimg.cn/20190617135050730.png" alt="img"></p><p>查看/root/mysql/data目录是否有数据文件</p><p><img src="https://img-blog.csdnimg.cn/20190617135810787.png" alt="img"></p><p>设置mysql容器自动重启</p><p><img src="/2020/09/11/docker安装MySQL5-7/image-20200914100200040.png" alt=""></p><blockquote><p>解决IPv4 forwarding is disabled. Networking will not work.</p><p><img src="/2020/09/11/docker安装MySQL5-7/image-20200914100232915.png" alt=""></p></blockquote><p>添加net.ipv4.ip_forward=1</p><p><img src="/2020/09/11/docker安装MySQL5-7/image-20200914100351949.png" alt=""></p><p>重启网络服务</p><p><img src="/2020/09/11/docker安装MySQL5-7/image-20200914100408921.png" alt=""></p><p>查看状态</p><p><img src="/2020/09/11/docker安装MySQL5-7/image-20200914100427343.png" alt=""></p><p>net.ipv4.ip_forward=1 则表示修改成功.</p><p>进入容器命令:</p><p><img src="/2020/09/11/docker安装MySQL5-7/image-20200914100605677.png" alt=""></p><p>查看MySQL配置文件位置:</p><p><img src="/2020/09/11/docker安装MySQL5-7/image-20200914100646941.png" alt=""></p><p>查看MySQL相关文件路径:</p><p><img src="/2020/09/11/docker安装MySQL5-7/image-20200914101129882.png" alt=""></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ol&gt;
&lt;li&gt;安装mysql5.7 docker镜像&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;拉取官方mysql5.7镜像 &lt;/p&gt;
&lt;p&gt;&lt;code&gt;docker pull mysql:5.7&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://img-blog.csdni
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>U8G2自定义中文字库的方法</title>
    <link href="https://zhaolilong.com/2020/09/03/U8G2%E8%87%AA%E5%AE%9A%E4%B9%89%E4%B8%AD%E6%96%87%E5%AD%97%E5%BA%93%E7%9A%84%E6%96%B9%E6%B3%95/"/>
    <id>https://zhaolilong.com/2020/09/03/U8G2自定义中文字库的方法/</id>
    <published>2020-09-03T06:40:02.000Z</published>
    <updated>2020-09-03T06:41:00.276Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://segmentfault.com/a/1190000022324409" target="_blank" rel="noopener">https://segmentfault.com/a/1190000022324409</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://segmentfault.com/a/1190000022324409&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://segmentfault.com/a/1190000022324409&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="-U8G2 -字库" scheme="https://zhaolilong.com/tags/U8G2-%E5%AD%97%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>《Arduino》开发之用u8g2库给0.96寸OLED刷bmp图片，OLED图片取模</title>
    <link href="https://zhaolilong.com/2020/09/03/%E3%80%8AArduino%E3%80%8B%E5%BC%80%E5%8F%91%E4%B9%8B%E7%94%A8u8g2%E5%BA%93%E7%BB%990-96%E5%AF%B8OLED%E5%88%B7bmp%E5%9B%BE%E7%89%87%EF%BC%8COLED%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1/"/>
    <id>https://zhaolilong.com/2020/09/03/《Arduino》开发之用u8g2库给0-96寸OLED刷bmp图片，OLED图片取模/</id>
    <published>2020-09-03T06:38:46.000Z</published>
    <updated>2020-09-03T06:39:12.342Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://blog.csdn.net/qq_41868901/article/details/104221495" target="_blank" rel="noopener">https://blog.csdn.net/qq_41868901/article/details/104221495</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/qq_41868901/article/details/104221495&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/qq_41868901/ar
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>OLED/LCD/12864_WEB在线图片取模工具</title>
    <link href="https://zhaolilong.com/2020/09/03/OLED-LCD-12864-WEB%E5%9C%A8%E7%BA%BF%E5%9B%BE%E7%89%87%E5%8F%96%E6%A8%A1%E5%B7%A5%E5%85%B7/"/>
    <id>https://zhaolilong.com/2020/09/03/OLED-LCD-12864-WEB在线图片取模工具/</id>
    <published>2020-09-03T06:36:20.000Z</published>
    <updated>2020-09-03T06:36:51.355Z</updated>
    
    <content type="html"><![CDATA[<p>工具地址：<br><a href="http://tools.clz.me/" target="_blank" rel="noopener">http://tools.clz.me/</a></p><p>源代码：<br><a href="https://github.com/coloz/image-to-bitmap-array" target="_blank" rel="noopener">https://github.com/coloz/image-to-bitmap-array</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;工具地址：&lt;br&gt;&lt;a href=&quot;http://tools.clz.me/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;http://tools.clz.me/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;源代码：&lt;br&gt;&lt;a href=&quot;https://github.co
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>IDEA模板的内置变量</title>
    <link href="https://zhaolilong.com/2020/09/03/IDEA%E6%A8%A1%E6%9D%BF%E7%9A%84%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F/"/>
    <id>https://zhaolilong.com/2020/09/03/IDEA模板的内置变量/</id>
    <published>2020-09-03T06:29:34.000Z</published>
    <updated>2020-09-03T06:30:07.333Z</updated>
    
    <content type="html"><![CDATA[<p>${PACKAGE_NAME} name of the package in which the new file is created</p><p>${USER} current user system login name</p><p>${DATE} current system date</p><p>${TIME} current system time</p><p>${YEAR} current year</p><p>${MONTH} current month</p><p>${MONTH_NAME_SHORT} first 3 letters of the current month name. Example: Jan, Feb, etc.</p><p>${MONTH_NAME_FULL} full name of the current month. Example: January, February, etc.</p><p>${DAY} current day of the month</p><p>${HOUR} current hour</p><p>${MINUTE} current minute</p><p>${PROJECT_NAME} the name of the current project</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;${PACKAGE_NAME} name of the package in which the new file is created&lt;/p&gt;
&lt;p&gt;${USER} current user system login name&lt;/p&gt;
&lt;p&gt;${DATE} current
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Mac版本软件崩溃解决方案</title>
    <link href="https://zhaolilong.com/2020/09/03/Mac%E7%89%88%E6%9C%AC%E8%BD%AF%E4%BB%B6%E5%B4%A9%E6%BA%83%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <id>https://zhaolilong.com/2020/09/03/Mac版本软件崩溃解决方案/</id>
    <published>2020-09-03T06:16:15.000Z</published>
    <updated>2020-09-03T06:16:56.305Z</updated>
    
    <content type="html"><![CDATA[<p>codesign -f -s - –deep /Applications/xxx.app</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;codesign -f -s - –deep /Applications/xxx.app&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="破解" scheme="https://zhaolilong.com/tags/%E7%A0%B4%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>使用grep、sed正则提取字符串</title>
    <link href="https://zhaolilong.com/2020/09/03/%E4%BD%BF%E7%94%A8grep%E3%80%81sed%E6%AD%A3%E5%88%99%E6%8F%90%E5%8F%96%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
    <id>https://zhaolilong.com/2020/09/03/使用grep、sed正则提取字符串/</id>
    <published>2020-09-03T06:13:51.000Z</published>
    <updated>2020-09-14T03:24:35.054Z</updated>
    
    <content type="html"><![CDATA[<h2 id="grep"><a href="#grep" class="headerlink" title="grep"></a>grep</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;number : 123456&quot; | grep -oP &apos;(?&lt;=number : )(\d+)&apos;</span><br></pre></td></tr></table></figure><h2 id="sed"><a href="#sed" class="headerlink" title="sed"></a>sed</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &quot;number : 123456&quot; | sed  &apos;s/number : \([0-9]*\)/\1/g&apos;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;grep&quot;&gt;&lt;a href=&quot;#grep&quot; class=&quot;headerlink&quot; title=&quot;grep&quot;&gt;&lt;/a&gt;grep&lt;/h2&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pr
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>MP4启用-movflags_faststart</title>
    <link href="https://zhaolilong.com/2020/09/03/MP4%E5%90%AF%E7%94%A8-movflags-faststart/"/>
    <id>https://zhaolilong.com/2020/09/03/MP4启用-movflags-faststart/</id>
    <published>2020-09-03T06:10:58.000Z</published>
    <updated>2020-09-14T03:23:55.137Z</updated>
    
    <content type="html"><![CDATA[<p>你的命令缺少一个加号,它应该让你在输出中“将moov原子移动到文件的开头”.正确的命令是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i C:\vidtests\Wildlife.mp4 -movflags +faststart C:\vidtests\Wildlife_fs.mp4</span><br></pre></td></tr></table></figure><p>作为经验法则,当不编码/转码时,我建议使用“-vcodec copy -acodec copy”参数,如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -i C:\vidtests\Wildlife.mp4 -vcodec copy -acodec copy -movflags +faststart C:\vidtests\Wildlife_fs.mp4</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;你的命令缺少一个加号,它应该让你在输出中“将moov原子移动到文件的开头”.正确的命令是：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Modbus寄存器种类说明</title>
    <link href="https://zhaolilong.com/2020/09/03/Modbus%E5%AF%84%E5%AD%98%E5%99%A8%E7%A7%8D%E7%B1%BB%E8%AF%B4%E6%98%8E/"/>
    <id>https://zhaolilong.com/2020/09/03/Modbus寄存器种类说明/</id>
    <published>2020-09-03T03:43:53.000Z</published>
    <updated>2020-09-03T03:46:56.049Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>寄存器种类</th><th>说明</th><th>PLC类比</th><th>举例说明</th></tr></thead><tbody><tr><td>线圈状态</td><td>输出端口。可设定端口的输出状态，也可以读取该位的输出状态。可分为两种不同的执行状态，例如保持型或边沿触发型。</td><td>DO数字量输出</td><td>电磁阀输出，MOSFET输出，LED显示等。</td></tr><tr><td>离散输入状态</td><td>输入端口。通过外部设定改变输入状态，可读但不可写。</td><td>DI数字量输入</td><td>拨码开关，接近开关等。</td></tr><tr><td>保持寄存器</td><td>输出参数或保持参数，控制器运行时被设定的某些参数。可读可写。</td><td>AO模拟量输出</td><td>模拟量输出设定值，PID运行参数，变量阀输出大小，传感器报警上限下限。</td></tr><tr><td>输入寄存器</td><td>输入参数。控制器运行时从外部设备获得的参数。可读但不可写。</td><td>AI模拟量输入</td><td>模拟量输入</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;寄存器种类&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;th&gt;PLC类比&lt;/th&gt;
&lt;th&gt;举例说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;线圈状态&lt;/td&gt;
&lt;td&gt;输出端口。可设定端口的输出状态，也可
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ModbusTCP报文格式说明</title>
    <link href="https://zhaolilong.com/2020/09/03/ModbusTCP%E6%8A%A5%E6%96%87%E6%A0%BC%E5%BC%8F%E8%AF%B4%E6%98%8E/"/>
    <id>https://zhaolilong.com/2020/09/03/ModbusTCP报文格式说明/</id>
    <published>2020-09-03T02:20:07.000Z</published>
    <updated>2020-09-03T06:07:09.487Z</updated>
    
    <content type="html"><![CDATA[<p>modbus tcp数据报文结构</p><p>请求：00 00 00 00 00 06 09 03 00 00 00 01</p><p>响应：00 00 00 00 00 05 09 03 02 12 34</p><p>　　一次modbus tcp读取保持寄存器的通信分析(省略了ip/tcp头)：从左向右分析该数据报文：</p><p>请求：</p><p>00 00为此次通信事务处理标识符，一般每次通信之后将被要求加1以区别不同的通信数据报文;</p><p>00 00表示协议标识符，00 00为modbus协议;</p><p>00 06为数据长度，用来指示接下来数据的长度，单位字节;</p><p>09为设备地址，用以标识连接在串行线或者网络上的远程服务端的地址。以上七个字节也被称为modbus报文头；</p><p>03为功能码，此时代码03为读取保持寄存器数据；</p><p>00 00为起始地址；</p><p>00 01为寄存器数量，（word数量）。</p><p>响应：</p><p>00 00为此次通信事务处理标识符，应答报文要求与先前对应的请求保持一致;</p><p>00 00为协议标识符，与先前对应的请求保持一致;</p><p>00 05为数据长度，用来指示接下来数据的长度，单位字节;</p><p>09为设备地址，应答报文要求与先前对应的请求保持一致；</p><p>03为功能码，正常情况下应答报文要求与先前对应的请求保持一致，如果出错则返回80h+先前的功能码；</p><p>02指示接下来数据的字节长度;</p><p>12 34为被读取的保持寄存器中的数据值，即要求被读取的地址为00 00的保持寄存器中的数值为1234h。</p><p>参考资料：<a href="https://www.cnblogs.com/ioufev/articles/10830028.html" target="_blank" rel="noopener">https://www.cnblogs.com/ioufev/articles/10830028.html</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;modbus tcp数据报文结构&lt;/p&gt;
&lt;p&gt;请求：00 00 00 00 00 06 09 03 00 00 00 01&lt;/p&gt;
&lt;p&gt;响应：00 00 00 00 00 05 09 03 02 12 34&lt;/p&gt;
&lt;p&gt;　　一次modbus tcp读取保持寄存器的通信
      
    
    </summary>
    
    
      <category term="ModbusTCP" scheme="https://zhaolilong.com/tags/ModbusTCP/"/>
    
  </entry>
  
</feed>
